services:
  postgres:
    image: postgres:15
    env_file: .env
    restart: unless-stopped
    volumes:
      - "postgres-data:/var/lib/postgresql/data/"

  django:
    build: .
    image: django-docker
    env_file: .env
    restart: unless-stopped
    volumes:
      - "staticfiles-data:/var/www/static"
      - "media-data:/var/www/media"
    depends_on:
      - postgres
      - redis
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.django.rule=Host(`quickcritic.online`)"
      - "traefik.http.routers.django.entrypoints=web"
      - "traefik.http.routers.django.entrypoints=websecure"
      - "traefik.http.routers.django.tls.certresolver=le-resolver"
      - "traefik.http.services.django.loadbalancer.server.port=8000"

  nginx:
    image: nginx:1.23-alpine
    env_file: .env
    restart: unless-stopped
    volumes:
      - type: volume
        source: media-data
        target: /usr/share/nginx/html/media
        read_only: true
        volume:
          nocopy: true
      - type: volume
        source: staticfiles-data
        target: /usr/share/nginx/html/static
        read_only: true
        volume:
          nocopy: true
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - django
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.staticfiles.rule=Host(`quickcritic.online`) && (PathPrefix(`/static`) || PathPrefix(`/media`))"
      - "traefik.http.routers.staticfiles.entrypoints=websecure"
      - "traefik.http.routers.staticfiles.tls.certresolver=le-resolver"
      - "traefik.http.services.nginx.loadbalancer.server.port=80"

  reverse-proxy:
    image: traefik:v2.9
    env_file: .env
    restart: unless-stopped
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.le-resolver.acme.httpchallenge=true"
      - "--certificatesresolvers.le-resolver.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.le-resolver.acme.email=admin@quickcritic.online"
      - "--certificatesresolvers.le-resolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "./letsencrypt:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  celery:
    build: .
    command: celery -A quick_critique_project worker --loglevel=info
    volumes:
      - .:/code
    depends_on:
      - django
      - redis

  redis:
    image: redis:latest

volumes:
  postgres-data:
  staticfiles-data:
  media-data: